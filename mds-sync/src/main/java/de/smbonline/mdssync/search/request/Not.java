//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.2-147 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2020.07.02 at 02:33:59 PM MESZ 
//


package de.smbonline.mdssync.search.request;

import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Not complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Not">
 *   &lt;complexContent>
 *     &lt;restriction base="{http://www.w3.org/2001/XMLSchema}anyType">
 *       &lt;choice>
 *         &lt;element name="and" type="{http://www.zetcom.com/ria/ws/module/search}And"/>
 *         &lt;element name="or" type="{http://www.zetcom.com/ria/ws/module/search}Or"/>
 *         &lt;element name="not" type="{http://www.zetcom.com/ria/ws/module/search}Not"/>
 *         &lt;element name="betweenIncl" type="{http://www.zetcom.com/ria/ws/module/search}BetweenIncl"/>
 *         &lt;element name="betweenExcl" type="{http://www.zetcom.com/ria/ws/module/search}BetweenExcl"/>
 *         &lt;element name="contains" type="{http://www.zetcom.com/ria/ws/module/search}Contains"/>
 *         &lt;element name="endsWithField" type="{http://www.zetcom.com/ria/ws/module/search}EndsWithField"/>
 *         &lt;element name="endsWithTerm" type="{http://www.zetcom.com/ria/ws/module/search}EndsWithTerm"/>
 *         &lt;element name="equalsField" type="{http://www.zetcom.com/ria/ws/module/search}EqualsField"/>
 *         &lt;element name="equalsTerm" type="{http://www.zetcom.com/ria/ws/module/search}EqualsTerm"/>
 *         &lt;element name="greater" type="{http://www.zetcom.com/ria/ws/module/search}Greater"/>
 *         &lt;element name="greaterEquals" type="{http://www.zetcom.com/ria/ws/module/search}GreaterEquals"/>
 *         &lt;element name="isNotNull" type="{http://www.zetcom.com/ria/ws/module/search}IsNotNull"/>
 *         &lt;element name="isNull" type="{http://www.zetcom.com/ria/ws/module/search}IsNull"/>
 *         &lt;element name="isNotBlank" type="{http://www.zetcom.com/ria/ws/module/search}IsNotBlank"/>
 *         &lt;element name="isBlank" type="{http://www.zetcom.com/ria/ws/module/search}IsBlank"/>
 *         &lt;element name="less" type="{http://www.zetcom.com/ria/ws/module/search}Less"/>
 *         &lt;element name="lessEquals" type="{http://www.zetcom.com/ria/ws/module/search}LessEquals"/>
 *         &lt;element name="notEqualsField" type="{http://www.zetcom.com/ria/ws/module/search}NotEqualsField"/>
 *         &lt;element name="notEqualsTerm" type="{http://www.zetcom.com/ria/ws/module/search}NotEqualsTerm"/>
 *         &lt;element name="startsWithField" type="{http://www.zetcom.com/ria/ws/module/search}StartsWithField"/>
 *         &lt;element name="startsWithTerm" type="{http://www.zetcom.com/ria/ws/module/search}StartsWithTerm"/>
 *       &lt;/choice>
 *     &lt;/restriction>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Not", propOrder = {
    "and",
    "or",
    "not",
    "betweenIncl",
    "betweenExcl",
    "contains",
    "endsWithField",
    "endsWithTerm",
    "equalsField",
    "equalsTerm",
    "greater",
    "greaterEquals",
    "isNotNull",
    "isNull",
    "isNotBlank",
    "isBlank",
    "less",
    "lessEquals",
    "notEqualsField",
    "notEqualsTerm",
    "startsWithField",
    "startsWithTerm"
})
public class Not {

    protected And and;
    protected Or or;
    protected Not not;
    protected BetweenIncl betweenIncl;
    protected BetweenExcl betweenExcl;
    protected Contains contains;
    protected EndsWithField endsWithField;
    protected EndsWithTerm endsWithTerm;
    protected EqualsField equalsField;
    protected EqualsTerm equalsTerm;
    protected Greater greater;
    protected GreaterEquals greaterEquals;
    protected IsNotNull isNotNull;
    protected IsNull isNull;
    protected IsNotBlank isNotBlank;
    protected IsBlank isBlank;
    protected Less less;
    protected LessEquals lessEquals;
    protected NotEqualsField notEqualsField;
    protected NotEqualsTerm notEqualsTerm;
    protected StartsWithField startsWithField;
    protected StartsWithTerm startsWithTerm;

    /**
     * Gets the value of the and property.
     * 
     * @return
     *     possible object is
     *     {@link And }
     *     
     */
    public And getAnd() {
        return and;
    }

    /**
     * Sets the value of the and property.
     * 
     * @param value
     *     allowed object is
     *     {@link And }
     *     
     */
    public void setAnd(And value) {
        this.and = value;
    }

    /**
     * Gets the value of the or property.
     * 
     * @return
     *     possible object is
     *     {@link Or }
     *     
     */
    public Or getOr() {
        return or;
    }

    /**
     * Sets the value of the or property.
     * 
     * @param value
     *     allowed object is
     *     {@link Or }
     *     
     */
    public void setOr(Or value) {
        this.or = value;
    }

    /**
     * Gets the value of the not property.
     * 
     * @return
     *     possible object is
     *     {@link Not }
     *     
     */
    public Not getNot() {
        return not;
    }

    /**
     * Sets the value of the not property.
     * 
     * @param value
     *     allowed object is
     *     {@link Not }
     *     
     */
    public void setNot(Not value) {
        this.not = value;
    }

    /**
     * Gets the value of the betweenIncl property.
     * 
     * @return
     *     possible object is
     *     {@link BetweenIncl }
     *     
     */
    public BetweenIncl getBetweenIncl() {
        return betweenIncl;
    }

    /**
     * Sets the value of the betweenIncl property.
     * 
     * @param value
     *     allowed object is
     *     {@link BetweenIncl }
     *     
     */
    public void setBetweenIncl(BetweenIncl value) {
        this.betweenIncl = value;
    }

    /**
     * Gets the value of the betweenExcl property.
     * 
     * @return
     *     possible object is
     *     {@link BetweenExcl }
     *     
     */
    public BetweenExcl getBetweenExcl() {
        return betweenExcl;
    }

    /**
     * Sets the value of the betweenExcl property.
     * 
     * @param value
     *     allowed object is
     *     {@link BetweenExcl }
     *     
     */
    public void setBetweenExcl(BetweenExcl value) {
        this.betweenExcl = value;
    }

    /**
     * Gets the value of the contains property.
     * 
     * @return
     *     possible object is
     *     {@link Contains }
     *     
     */
    public Contains getContains() {
        return contains;
    }

    /**
     * Sets the value of the contains property.
     * 
     * @param value
     *     allowed object is
     *     {@link Contains }
     *     
     */
    public void setContains(Contains value) {
        this.contains = value;
    }

    /**
     * Gets the value of the endsWithField property.
     * 
     * @return
     *     possible object is
     *     {@link EndsWithField }
     *     
     */
    public EndsWithField getEndsWithField() {
        return endsWithField;
    }

    /**
     * Sets the value of the endsWithField property.
     * 
     * @param value
     *     allowed object is
     *     {@link EndsWithField }
     *     
     */
    public void setEndsWithField(EndsWithField value) {
        this.endsWithField = value;
    }

    /**
     * Gets the value of the endsWithTerm property.
     * 
     * @return
     *     possible object is
     *     {@link EndsWithTerm }
     *     
     */
    public EndsWithTerm getEndsWithTerm() {
        return endsWithTerm;
    }

    /**
     * Sets the value of the endsWithTerm property.
     * 
     * @param value
     *     allowed object is
     *     {@link EndsWithTerm }
     *     
     */
    public void setEndsWithTerm(EndsWithTerm value) {
        this.endsWithTerm = value;
    }

    /**
     * Gets the value of the equalsField property.
     * 
     * @return
     *     possible object is
     *     {@link EqualsField }
     *     
     */
    public EqualsField getEqualsField() {
        return equalsField;
    }

    /**
     * Sets the value of the equalsField property.
     * 
     * @param value
     *     allowed object is
     *     {@link EqualsField }
     *     
     */
    public void setEqualsField(EqualsField value) {
        this.equalsField = value;
    }

    /**
     * Gets the value of the equalsTerm property.
     * 
     * @return
     *     possible object is
     *     {@link EqualsTerm }
     *     
     */
    public EqualsTerm getEqualsTerm() {
        return equalsTerm;
    }

    /**
     * Sets the value of the equalsTerm property.
     * 
     * @param value
     *     allowed object is
     *     {@link EqualsTerm }
     *     
     */
    public void setEqualsTerm(EqualsTerm value) {
        this.equalsTerm = value;
    }

    /**
     * Gets the value of the greater property.
     * 
     * @return
     *     possible object is
     *     {@link Greater }
     *     
     */
    public Greater getGreater() {
        return greater;
    }

    /**
     * Sets the value of the greater property.
     * 
     * @param value
     *     allowed object is
     *     {@link Greater }
     *     
     */
    public void setGreater(Greater value) {
        this.greater = value;
    }

    /**
     * Gets the value of the greaterEquals property.
     * 
     * @return
     *     possible object is
     *     {@link GreaterEquals }
     *     
     */
    public GreaterEquals getGreaterEquals() {
        return greaterEquals;
    }

    /**
     * Sets the value of the greaterEquals property.
     * 
     * @param value
     *     allowed object is
     *     {@link GreaterEquals }
     *     
     */
    public void setGreaterEquals(GreaterEquals value) {
        this.greaterEquals = value;
    }

    /**
     * Gets the value of the isNotNull property.
     * 
     * @return
     *     possible object is
     *     {@link IsNotNull }
     *     
     */
    public IsNotNull getIsNotNull() {
        return isNotNull;
    }

    /**
     * Sets the value of the isNotNull property.
     * 
     * @param value
     *     allowed object is
     *     {@link IsNotNull }
     *     
     */
    public void setIsNotNull(IsNotNull value) {
        this.isNotNull = value;
    }

    /**
     * Gets the value of the isNull property.
     * 
     * @return
     *     possible object is
     *     {@link IsNull }
     *     
     */
    public IsNull getIsNull() {
        return isNull;
    }

    /**
     * Sets the value of the isNull property.
     * 
     * @param value
     *     allowed object is
     *     {@link IsNull }
     *     
     */
    public void setIsNull(IsNull value) {
        this.isNull = value;
    }

    /**
     * Gets the value of the isNotBlank property.
     * 
     * @return
     *     possible object is
     *     {@link IsNotBlank }
     *     
     */
    public IsNotBlank getIsNotBlank() {
        return isNotBlank;
    }

    /**
     * Sets the value of the isNotBlank property.
     * 
     * @param value
     *     allowed object is
     *     {@link IsNotBlank }
     *     
     */
    public void setIsNotBlank(IsNotBlank value) {
        this.isNotBlank = value;
    }

    /**
     * Gets the value of the isBlank property.
     * 
     * @return
     *     possible object is
     *     {@link IsBlank }
     *     
     */
    public IsBlank getIsBlank() {
        return isBlank;
    }

    /**
     * Sets the value of the isBlank property.
     * 
     * @param value
     *     allowed object is
     *     {@link IsBlank }
     *     
     */
    public void setIsBlank(IsBlank value) {
        this.isBlank = value;
    }

    /**
     * Gets the value of the less property.
     * 
     * @return
     *     possible object is
     *     {@link Less }
     *     
     */
    public Less getLess() {
        return less;
    }

    /**
     * Sets the value of the less property.
     * 
     * @param value
     *     allowed object is
     *     {@link Less }
     *     
     */
    public void setLess(Less value) {
        this.less = value;
    }

    /**
     * Gets the value of the lessEquals property.
     * 
     * @return
     *     possible object is
     *     {@link LessEquals }
     *     
     */
    public LessEquals getLessEquals() {
        return lessEquals;
    }

    /**
     * Sets the value of the lessEquals property.
     * 
     * @param value
     *     allowed object is
     *     {@link LessEquals }
     *     
     */
    public void setLessEquals(LessEquals value) {
        this.lessEquals = value;
    }

    /**
     * Gets the value of the notEqualsField property.
     * 
     * @return
     *     possible object is
     *     {@link NotEqualsField }
     *     
     */
    public NotEqualsField getNotEqualsField() {
        return notEqualsField;
    }

    /**
     * Sets the value of the notEqualsField property.
     * 
     * @param value
     *     allowed object is
     *     {@link NotEqualsField }
     *     
     */
    public void setNotEqualsField(NotEqualsField value) {
        this.notEqualsField = value;
    }

    /**
     * Gets the value of the notEqualsTerm property.
     * 
     * @return
     *     possible object is
     *     {@link NotEqualsTerm }
     *     
     */
    public NotEqualsTerm getNotEqualsTerm() {
        return notEqualsTerm;
    }

    /**
     * Sets the value of the notEqualsTerm property.
     * 
     * @param value
     *     allowed object is
     *     {@link NotEqualsTerm }
     *     
     */
    public void setNotEqualsTerm(NotEqualsTerm value) {
        this.notEqualsTerm = value;
    }

    /**
     * Gets the value of the startsWithField property.
     * 
     * @return
     *     possible object is
     *     {@link StartsWithField }
     *     
     */
    public StartsWithField getStartsWithField() {
        return startsWithField;
    }

    /**
     * Sets the value of the startsWithField property.
     * 
     * @param value
     *     allowed object is
     *     {@link StartsWithField }
     *     
     */
    public void setStartsWithField(StartsWithField value) {
        this.startsWithField = value;
    }

    /**
     * Gets the value of the startsWithTerm property.
     * 
     * @return
     *     possible object is
     *     {@link StartsWithTerm }
     *     
     */
    public StartsWithTerm getStartsWithTerm() {
        return startsWithTerm;
    }

    /**
     * Sets the value of the startsWithTerm property.
     * 
     * @param value
     *     allowed object is
     *     {@link StartsWithTerm }
     *     
     */
    public void setStartsWithTerm(StartsWithTerm value) {
        this.startsWithTerm = value;
    }

}
